Component: ARM Compiler 5.05 update 1 (build 106) Tool: armlink [4d0efa]

==============================================================================

Section Cross References

    gpio_out.o(.text) refers to strlen.o(.text) for strlen
    gpio_out.o(.text) refers to stm32_init.o(.text) for stm32_Init
    gpio_out.o(.text) refers to printfb.o(i.__0printf$bare) for __2printf
    gpio_out.o(.text) refers to gpio_out.o(.data) for sys_count
    stm32f10x.o(RESET) refers to stm32f10x.o(STACK) for __initial_sp
    stm32f10x.o(RESET) refers to stm32f10x.o(.text) for Reset_Handler
    stm32f10x.o(RESET) refers to gpio_out.o(.text) for SysTick_Handler
    stm32f10x.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to gpio_out.o(.text) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to gpio_out.o(.text) for fputc
    printfb.o(i.__0printf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to gpio_out.o(.text) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to gpio_out.o(.text) for fputc
    printfb.o(i.__0vprintf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to gpio_out.o(.text) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to gpio_out.o(.text) for fputc
    printf0.o(i.__0printf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to gpio_out.o(.text) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to gpio_out.o(.text) for fputc
    printf0.o(i.__0vprintf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to gpio_out.o(.text) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to gpio_out.o(.text) for fputc
    printf1.o(i.__0printf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to gpio_out.o(.text) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to gpio_out.o(.text) for fputc
    printf1.o(i.__0vprintf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to gpio_out.o(.text) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to gpio_out.o(.text) for fputc
    printf2.o(i.__0printf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to gpio_out.o(.text) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to gpio_out.o(.text) for fputc
    printf2.o(i.__0vprintf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to gpio_out.o(.text) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to gpio_out.o(.text) for fputc
    printf3.o(i.__0printf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to gpio_out.o(.text) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to gpio_out.o(.text) for fputc
    printf3.o(i.__0vprintf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to gpio_out.o(.text) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to gpio_out.o(.text) for fputc
    printf4.o(i.__0printf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to gpio_out.o(.text) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to gpio_out.o(.text) for fputc
    printf4.o(i.__0vprintf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to gpio_out.o(.text) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to gpio_out.o(.text) for fputc
    printf5.o(i.__0printf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to gpio_out.o(.text) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to gpio_out.o(.text) for fputc
    printf5.o(i.__0vprintf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to gpio_out.o(.text) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to gpio_out.o(.text) for fputc
    printf6.o(i.__0printf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to gpio_out.o(.text) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to gpio_out.o(.text) for fputc
    printf6.o(i.__0vprintf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to gpio_out.o(.text) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to gpio_out.o(.text) for fputc
    printf7.o(i.__0printf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to gpio_out.o(.text) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to gpio_out.o(.text) for fputc
    printf7.o(i.__0vprintf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to gpio_out.o(.text) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to gpio_out.o(.text) for fputc
    printf8.o(i.__0printf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to gpio_out.o(.text) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to gpio_out.o(.text) for fputc
    printf8.o(i.__0vprintf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to gpio_out.o(.text) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to gpio_out.o(.text) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to gpio_out.o(.text) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to gpio_out.o(.text) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to stm32f10x.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to stm32f10x.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to gpio_out.o(.text) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to gpio_out.o(.text) for main
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr


==============================================================================

Removing Unused input sections from the image.

    Removing gpio_out.o(.bss), (512 bytes).
    Removing stm32f10x.o(HEAP), (0 bytes).
    Removing dadd.o(.text), (334 bytes).
    Removing dmul.o(.text), (228 bytes).
    Removing ddiv.o(.text), (222 bytes).
    Removing dfixul.o(.text), (48 bytes).
    Removing cdrcmple.o(.text), (48 bytes).
    Removing depilogue.o(.text), (186 bytes).

8 unused section(s) (total 1578 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf0.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf1.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf2.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf4.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf5.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf6.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf7.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf3.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf8.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfb.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/string/strlen.c         0x00000000   Number         0  strlen.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    source\GPIO_OUT.c                        0x00000000   Number         0  gpio_out.o ABSOLUTE
    source\STM32F10x.s                       0x00000000   Number         0  stm32f10x.o ABSOLUTE
    source\STM32_Init.c                      0x00000000   Number         0  stm32_init.o ABSOLUTE
    RESET                                    0x08000000   Section      236  stm32f10x.o(RESET)
    .ARM.Collect$$$$00000000                 0x080000ec   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x080000ec   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x080000f0   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x080000f4   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x080000f4   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x080000f4   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    .ARM.Collect$$$$0000000D                 0x080000fc   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x080000fc   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x080000fc   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    __lit__00000000                          0x080000fc   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x08000100   Section        0  gpio_out.o(.text)
    .text                                    0x080004bc   Section        0  stm32_init.o(.text)
    .text                                    0x08000690   Section       28  stm32f10x.o(.text)
    .text                                    0x080006ac   Section        0  strlen.o(.text)
    .text                                    0x080006bc   Section       36  init.o(.text)
    i.__0printf$bare                         0x080006e0   Section        0  printfb.o(i.__0printf$bare)
    i.__scatterload_copy                     0x080006f0   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x080006fe   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x08000700   Section       14  handlers.o(i.__scatterload_zeroinit)
    i._printf_core                           0x0800070e   Section        0  printfb.o(i._printf_core)
    _printf_core                             0x0800070f   Thumb Code    34  printfb.o(i._printf_core)
    .data                                    0x20000000   Section        8  gpio_out.o(.data)
    .data                                    0x20000008   Section        4  stdout.o(.data)
    STACK                                    0x20000010   Section      512  stm32f10x.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  gpio_out.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors                                0x08000000   Data           4  stm32f10x.o(RESET)
    __main                                   0x080000ed   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x080000ed   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x080000f1   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x080000f5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x080000f5   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x080000f5   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x080000f5   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x080000fd   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x080000fd   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    fputc                                    0x08000101   Thumb Code    24  gpio_out.o(.text)
    micros_10us                              0x08000119   Thumb Code     6  gpio_out.o(.text)
    Delay                                    0x0800011f   Thumb Code    16  gpio_out.o(.text)
    Delay_ms                                 0x0800012f   Thumb Code    16  gpio_out.o(.text)
    TimingDelay_Decrement                    0x0800013f   Thumb Code    18  gpio_out.o(.text)
    SysTick_Handler                          0x08000151   Thumb Code    18  gpio_out.o(.text)
    rs_high                                  0x08000163   Thumb Code    14  gpio_out.o(.text)
    rs_low                                   0x08000171   Thumb Code    14  gpio_out.o(.text)
    enable_high_low                          0x0800017f   Thumb Code    24  gpio_out.o(.text)
    set_value_4bit                           0x08000197   Thumb Code   136  gpio_out.o(.text)
    set_instruction_4bit                     0x0800021f   Thumb Code    56  gpio_out.o(.text)
    set_data_4bit                            0x08000257   Thumb Code    44  gpio_out.o(.text)
    charLCD_init                             0x08000283   Thumb Code    50  gpio_out.o(.text)
    charLCD_string                           0x080002b5   Thumb Code    28  gpio_out.o(.text)
    main                                     0x080002d1   Thumb Code   328  gpio_out.o(.text)
    stm32_EfiSetup                           0x080004bd   Thumb Code     8  stm32_init.o(.text)
    stm32_ClockSetup                         0x080004c5   Thumb Code    54  stm32_init.o(.text)
    stm32_NvicSetup                          0x080004fb   Thumb Code     2  stm32_init.o(.text)
    stm32_IwdgSetup                          0x080004fd   Thumb Code    32  stm32_init.o(.text)
    stm32_SysTickSetup                       0x0800051d   Thumb Code    28  stm32_init.o(.text)
    stm32_RtcSetup                           0x08000539   Thumb Code   174  stm32_init.o(.text)
    stm32_TimerSetup                         0x080005e7   Thumb Code     2  stm32_init.o(.text)
    stm32_GpioSetup                          0x080005e9   Thumb Code     2  stm32_init.o(.text)
    stm32_UsartSetup                         0x080005eb   Thumb Code     2  stm32_init.o(.text)
    stm32_ExtiSetup                          0x080005ed   Thumb Code     2  stm32_init.o(.text)
    stm32_AfRemapSetup                       0x080005ef   Thumb Code     2  stm32_init.o(.text)
    stm32_TamperSetup                        0x080005f1   Thumb Code    96  stm32_init.o(.text)
    stm32_Init                               0x08000651   Thumb Code    16  stm32_init.o(.text)
    stm32_GetPCLK1                           0x08000661   Thumb Code     4  stm32_init.o(.text)
    Reset_Handler                            0x08000691   Thumb Code     4  stm32f10x.o(.text)
    NMI_Handler                              0x08000695   Thumb Code     2  stm32f10x.o(.text)
    HardFault_Handler                        0x08000697   Thumb Code     2  stm32f10x.o(.text)
    MemManage_Handler                        0x08000699   Thumb Code     2  stm32f10x.o(.text)
    BusFault_Handler                         0x0800069b   Thumb Code     2  stm32f10x.o(.text)
    UsageFault_Handler                       0x0800069d   Thumb Code     2  stm32f10x.o(.text)
    SVC_Handler                              0x0800069f   Thumb Code     2  stm32f10x.o(.text)
    DebugMon_Handler                         0x080006a1   Thumb Code     2  stm32f10x.o(.text)
    PendSV_Handler                           0x080006a3   Thumb Code     2  stm32f10x.o(.text)
    ADC_IRQHandler                           0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    CAN_RX1_IRQHandler                       0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    CAN_SCE_IRQHandler                       0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel1_IRQHandler                   0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel2_IRQHandler                   0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel3_IRQHandler                   0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel4_IRQHandler                   0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel5_IRQHandler                   0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel6_IRQHandler                   0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel7_IRQHandler                   0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    EXTI0_IRQHandler                         0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    EXTI15_10_IRQHandler                     0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    EXTI1_IRQHandler                         0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    EXTI2_IRQHandler                         0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    EXTI3_IRQHandler                         0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    EXTI4_IRQHandler                         0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    EXTI9_5_IRQHandler                       0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    FLASH_IRQHandler                         0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    I2C1_ER_IRQHandler                       0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    I2C1_EV_IRQHandler                       0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    I2C2_ER_IRQHandler                       0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    I2C2_EV_IRQHandler                       0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    PVD_IRQHandler                           0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    RCC_IRQHandler                           0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    RTCAlarm_IRQHandler                      0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    RTC_IRQHandler                           0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    SPI1_IRQHandler                          0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    SPI2_IRQHandler                          0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    TAMPER_IRQHandler                        0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    TIM1_BRK_IRQHandler                      0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    TIM1_CC_IRQHandler                       0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    TIM1_UP_IRQHandler                       0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    TIM2_IRQHandler                          0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    TIM3_IRQHandler                          0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    TIM4_IRQHandler                          0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    USART1_IRQHandler                        0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    USART2_IRQHandler                        0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    USART3_IRQHandler                        0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    USBWakeUp_IRQHandler                     0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    USB_HP_CAN_TX_IRQHandler                 0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    USB_LP_CAN_RX0_IRQHandler                0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    WWDG_IRQHandler                          0x080006a7   Thumb Code     0  stm32f10x.o(.text)
    strlen                                   0x080006ad   Thumb Code    14  strlen.o(.text)
    __scatterload                            0x080006bd   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x080006bd   Thumb Code     0  init.o(.text)
    __0printf$bare                           0x080006e1   Thumb Code     8  printfb.o(i.__0printf$bare)
    __1printf$bare                           0x080006e1   Thumb Code     0  printfb.o(i.__0printf$bare)
    __2printf                                0x080006e1   Thumb Code     0  printfb.o(i.__0printf$bare)
    __scatterload_copy                       0x080006f1   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x080006ff   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x08000701   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    Region$$Table$$Base                      0x08000730   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08000750   Number         0  anon$$obj.o(Region$$Table)
    TimingDelay                              0x20000000   Data           4  gpio_out.o(.data)
    sys_count                                0x20000004   Data           4  gpio_out.o(.data)
    __stdout                                 0x20000008   Data           4  stdout.o(.data)
    __initial_sp                             0x20000210   Data           0  stm32f10x.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000ed

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x0000075c, Max: 0x00020000, ABSOLUTE)

    Execution Region ER_IROM1 (Base: 0x08000000, Size: 0x00000750, Max: 0x00020000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x000000ec   Data   RO          130    RESET               stm32f10x.o
    0x080000ec   0x00000000   Code   RO          136  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x080000ec   0x00000004   Code   RO          401    .ARM.Collect$$$$00000001  mc_w.l(entry2.o)
    0x080000f0   0x00000004   Code   RO          404    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x080000f4   0x00000000   Code   RO          406    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x080000f4   0x00000000   Code   RO          408    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x080000f4   0x00000008   Code   RO          409    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x080000fc   0x00000000   Code   RO          411    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x080000fc   0x00000000   Code   RO          413    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x080000fc   0x00000004   Code   RO          402    .ARM.Collect$$$$00002712  mc_w.l(entry2.o)
    0x08000100   0x000003bc   Code   RO            1    .text               gpio_out.o
    0x080004bc   0x000001d4   Code   RO          113    .text               stm32_init.o
    0x08000690   0x0000001c   Code   RO          131    .text               stm32f10x.o
    0x080006ac   0x0000000e   Code   RO          139    .text               mc_w.l(strlen.o)
    0x080006ba   0x00000002   PAD
    0x080006bc   0x00000024   Code   RO          431    .text               mc_w.l(init.o)
    0x080006e0   0x00000010   Code   RO          142    i.__0printf$bare    mc_w.l(printfb.o)
    0x080006f0   0x0000000e   Code   RO          443    i.__scatterload_copy  mc_w.l(handlers.o)
    0x080006fe   0x00000002   Code   RO          444    i.__scatterload_null  mc_w.l(handlers.o)
    0x08000700   0x0000000e   Code   RO          445    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x0800070e   0x00000022   Code   RO          149    i._printf_core      mc_w.l(printfb.o)
    0x08000730   0x00000020   Data   RO          441    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Base: 0x20000000, Size: 0x00000210, Max: 0x00005000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00000008   Data   RW            3    .data               gpio_out.o
    0x20000008   0x00000004   Data   RW          415    .data               mc_w.l(stdout.o)
    0x2000000c   0x00000004   PAD
    0x20000010   0x00000200   Zero   RW          128    STACK               stm32f10x.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       956        164          0          8          0       6848   gpio_out.o
       468         44          0          0          0       2081   stm32_init.o
        28          4        236          0        512        792   stm32f10x.o

    ----------------------------------------------------------------------
      1452        212        268          8        512       9721   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         0          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
        50          8          0          0          0        152   printfb.o
         0          0          0          4          0          0   stdout.o
        14          0          0          0          0         68   strlen.o

    ----------------------------------------------------------------------
       152         24          0          4          4        288   Library Totals
         2          0          0          0          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       150         24          0          4          0        288   mc_w.l

    ----------------------------------------------------------------------
       152         24          0          4          4        288   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      1604        236        268         12        516       9953   Grand Totals
      1604        236        268         12        516       9953   ELF Image Totals
      1604        236        268         12          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 1872 (   1.83kB)
    Total RW  Size (RW Data + ZI Data)               528 (   0.52kB)
    Total ROM Size (Code + RO Data + RW Data)       1884 (   1.84kB)

==============================================================================

