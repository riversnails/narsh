Component: ARM Compiler 5.05 update 1 (build 106) Tool: armlink [4d0efa]

==============================================================================

Section Cross References

    gpio_out.o(.text) refers to dfltui.o(.text) for __aeabi_ui2d
    gpio_out.o(.text) refers to dmul.o(.text) for __aeabi_dmul
    gpio_out.o(.text) refers to dfixi.o(.text) for __aeabi_d2iz
    gpio_out.o(.text) refers to gpio_out.o(.data) for sys_count
    gpio_out.o(.text) refers to gpio_out.o(.bss) for falling_edge_timing
    gpio_out.o(.text) refers to strlen.o(.text) for strlen
    gpio_out.o(.text) refers to malloc.o(i.malloc) for malloc
    gpio_out.o(.text) refers to printf3.o(i.__0printf$3) for __2printf
    gpio_out.o(.text) refers to printf3.o(i.__0sprintf$3) for __2sprintf
    gpio_out.o(.text) refers to stm32_init.o(.text) for stm32_Init
    gpio_out.o(.data) refers to gpio_out.o(.conststring) for .conststring
    stm32f10x.o(RESET) refers to stm32f10x.o(STACK) for __initial_sp
    stm32f10x.o(RESET) refers to stm32f10x.o(.text) for Reset_Handler
    stm32f10x.o(RESET) refers to gpio_out.o(.text) for SysTick_Handler
    stm32f10x.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to gpio_out.o(.text) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to gpio_out.o(.text) for fputc
    printfb.o(i.__0printf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to gpio_out.o(.text) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to gpio_out.o(.text) for fputc
    printfb.o(i.__0vprintf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to gpio_out.o(.text) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to gpio_out.o(.text) for fputc
    printf0.o(i.__0printf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to gpio_out.o(.text) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to gpio_out.o(.text) for fputc
    printf0.o(i.__0vprintf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to gpio_out.o(.text) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to gpio_out.o(.text) for fputc
    printf1.o(i.__0printf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to gpio_out.o(.text) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to gpio_out.o(.text) for fputc
    printf1.o(i.__0vprintf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to gpio_out.o(.text) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to gpio_out.o(.text) for fputc
    printf2.o(i.__0printf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to gpio_out.o(.text) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to gpio_out.o(.text) for fputc
    printf2.o(i.__0vprintf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to gpio_out.o(.text) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to gpio_out.o(.text) for fputc
    printf3.o(i.__0printf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to gpio_out.o(.text) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to gpio_out.o(.text) for fputc
    printf3.o(i.__0vprintf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to gpio_out.o(.text) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to gpio_out.o(.text) for fputc
    printf4.o(i.__0printf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to gpio_out.o(.text) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to gpio_out.o(.text) for fputc
    printf4.o(i.__0vprintf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to gpio_out.o(.text) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to gpio_out.o(.text) for fputc
    printf5.o(i.__0printf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to gpio_out.o(.text) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to gpio_out.o(.text) for fputc
    printf5.o(i.__0vprintf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to gpio_out.o(.text) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to gpio_out.o(.text) for fputc
    printf6.o(i.__0printf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to gpio_out.o(.text) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to gpio_out.o(.text) for fputc
    printf6.o(i.__0vprintf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to gpio_out.o(.text) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to gpio_out.o(.text) for fputc
    printf7.o(i.__0printf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to gpio_out.o(.text) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to gpio_out.o(.text) for fputc
    printf7.o(i.__0vprintf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to gpio_out.o(.text) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to gpio_out.o(.text) for fputc
    printf8.o(i.__0printf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to gpio_out.o(.text) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to gpio_out.o(.text) for fputc
    printf8.o(i.__0vprintf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to gpio_out.o(.text) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to gpio_out.o(.text) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to gpio_out.o(.text) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to gpio_out.o(.text) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    malloc.o(i.free) refers to mvars.o(.data) for __microlib_freelist
    malloc.o(i.malloc) refers to mvars.o(.data) for __microlib_freelist_initialised
    malloc.o(i.malloc) refers to mvars.o(.data) for __microlib_freelist
    malloc.o(i.malloc) refers to stm32f10x.o(HEAP) for __heap_base
    mallocr.o(i.__free$realloc) refers to mvars.o(.data) for __microlib_freelist
    mallocr.o(i.__malloc$realloc) refers to mallocr.o(i.internal_alloc) for internal_alloc
    mallocr.o(i.__malloc$realloc) refers to mvars.o(.data) for __microlib_freelist_initialised
    mallocr.o(i.__malloc$realloc) refers to stm32f10x.o(HEAP) for __heap_base
    mallocr.o(i.__malloc$realloc) refers to mvars.o(.data) for __microlib_freelist
    mallocr.o(i.internal_alloc) refers to memcpya.o(.text) for __aeabi_memcpy
    mallocr.o(i.internal_alloc) refers to mvars.o(.data) for __microlib_freelist
    mallocr.o(i.realloc) refers to mallocr.o(i.__free$realloc) for __free$realloc
    mallocr.o(i.realloc) refers to mallocr.o(i.internal_alloc) for internal_alloc
    mallocr.o(i.realloc) refers to mallocr.o(i.__malloc$realloc) for __malloc$realloc
    mallocr.o(i.realloc) refers to mvars.o(.data) for __microlib_freelist
    malloca.o(i.__aligned_malloc) refers to mvars.o(.data) for __microlib_freelist_initialised
    malloca.o(i.__aligned_malloc) refers to mvars.o(.data) for __microlib_freelist
    malloca.o(i.__aligned_malloc) refers to stm32f10x.o(HEAP) for __heap_base
    malloca.o(i.__free$memalign) refers to mvars.o(.data) for __microlib_freelist
    malloca.o(i.__malloc$memalign) refers to malloca.o(i.__aligned_malloc) for __aligned_malloc
    mallocra.o(i.__aligned_malloc$realloc) refers to mallocra.o(i.internal_alloc) for internal_alloc
    mallocra.o(i.__aligned_malloc$realloc) refers to mvars.o(.data) for __microlib_freelist_initialised
    mallocra.o(i.__aligned_malloc$realloc) refers to stm32f10x.o(HEAP) for __heap_base
    mallocra.o(i.__aligned_malloc$realloc) refers to mvars.o(.data) for __microlib_freelist
    mallocra.o(i.__free$realloc$memalign) refers to mvars.o(.data) for __microlib_freelist
    mallocra.o(i.__malloc$realloc$memalign) refers to mallocra.o(i.__aligned_malloc$realloc) for __aligned_malloc$realloc
    mallocra.o(i.__realloc$memalign) refers to mallocra.o(i.__free$realloc$memalign) for __free$realloc$memalign
    mallocra.o(i.__realloc$memalign) refers to mallocra.o(i.internal_alloc) for internal_alloc
    mallocra.o(i.__realloc$memalign) refers to mallocra.o(i.__malloc$realloc$memalign) for __malloc$realloc$memalign
    mallocra.o(i.__realloc$memalign) refers to mvars.o(.data) for __microlib_freelist
    mallocra.o(i.internal_alloc) refers to memcpya.o(.text) for __aeabi_memcpy
    mallocra.o(i.internal_alloc) refers to mvars.o(.data) for __microlib_freelist
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfltui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfltui.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfixi.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixi.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to stm32f10x.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to stm32f10x.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to gpio_out.o(.text) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to gpio_out.o(.text) for main
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing dadd.o(.text), (334 bytes).
    Removing ddiv.o(.text), (222 bytes).
    Removing dfixul.o(.text), (48 bytes).
    Removing cdrcmple.o(.text), (48 bytes).

4 unused section(s) (total 652 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  mallocr.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  malloca.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  mallocra.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  malloc.o ABSOLUTE
    ../clib/microlib/malloc/mvars.c          0x00000000   Number         0  mvars.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf8.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf7.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf6.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf5.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf4.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf1.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfb.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf0.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf2.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf3.o ABSOLUTE
    ../clib/microlib/printf/stubs.s          0x00000000   Number         0  stubs.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/strlen.c         0x00000000   Number         0  strlen.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixi.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dfltui.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    source\GPIO_OUT.c                        0x00000000   Number         0  gpio_out.o ABSOLUTE
    source\STM32F10x.s                       0x00000000   Number         0  stm32f10x.o ABSOLUTE
    source\STM32_Init.c                      0x00000000   Number         0  stm32_init.o ABSOLUTE
    RESET                                    0x08000000   Section      236  stm32f10x.o(RESET)
    .ARM.Collect$$$$00000000                 0x080000ec   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x080000ec   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x080000f0   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x080000f4   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x080000f4   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x080000f4   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    .ARM.Collect$$$$0000000D                 0x080000fc   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x080000fc   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x080000fc   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    __lit__00000000                          0x080000fc   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x08000100   Section        0  gpio_out.o(.text)
    .text                                    0x08001640   Section        0  stm32_init.o(.text)
    .text                                    0x08001814   Section       28  stm32f10x.o(.text)
    .text                                    0x08001830   Section        0  strlen.o(.text)
    .text                                    0x0800183e   Section        0  dmul.o(.text)
    .text                                    0x08001922   Section        0  dfltui.o(.text)
    .text                                    0x0800193c   Section        0  dfixi.o(.text)
    .text                                    0x0800197a   Section        0  uidiv.o(.text)
    .text                                    0x080019a6   Section        0  llushr.o(.text)
    .text                                    0x080019c6   Section        0  iusefp.o(.text)
    .text                                    0x080019c6   Section        0  depilogue.o(.text)
    .text                                    0x08001a80   Section       36  init.o(.text)
    .text                                    0x08001aa4   Section        0  llshl.o(.text)
    i.__0printf$3                            0x08001ac4   Section        0  printf3.o(i.__0printf$3)
    i.__0sprintf$3                           0x08001ae4   Section        0  printf3.o(i.__0sprintf$3)
    i.__scatterload_copy                     0x08001b0c   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x08001b1a   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x08001b1c   Section       14  handlers.o(i.__scatterload_zeroinit)
    i._printf_core                           0x08001b2c   Section        0  printf3.o(i._printf_core)
    _printf_core                             0x08001b2d   Thumb Code   436  printf3.o(i._printf_core)
    i._sputc                                 0x08001ce4   Section        0  printf3.o(i._sputc)
    _sputc                                   0x08001ce5   Thumb Code    10  printf3.o(i._sputc)
    i.malloc                                 0x08001cf0   Section        0  malloc.o(i.malloc)
    .conststring                             0x08001d5c   Section      130  gpio_out.o(.conststring)
    .data                                    0x20000000   Section      228  gpio_out.o(.data)
    .data                                    0x200000e4   Section        4  stdout.o(.data)
    .data                                    0x200000e8   Section        4  mvars.o(.data)
    .data                                    0x200000ec   Section        4  mvars.o(.data)
    .bss                                     0x200000f0   Section      956  gpio_out.o(.bss)
    HEAP                                     0x200004b0   Section        0  stm32f10x.o(HEAP)
    STACK                                    0x200004b0   Section      512  stm32f10x.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  gpio_out.o ABSOLUTE
    _printf_a                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_c                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_charcount                        0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_d                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_e                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_f                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_fp_dec                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_fp_hex                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_g                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_i                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_int_dec                          0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_l                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lc                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_ll                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lld                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lli                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llo                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llu                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llx                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_dec                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_hex                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_oct                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_ls                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_mbtowc                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_n                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_o                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_p                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_percent                          0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_pre_padding                      0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_s                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_str                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_truncate_signed                  0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_truncate_unsigned                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_u                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_wc                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_wctomb                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_x                                0x00000000   Number         0  stubs.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors                                0x08000000   Data           4  stm32f10x.o(RESET)
    __main                                   0x080000ed   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x080000ed   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x080000f1   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x080000f5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x080000f5   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x080000f5   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x080000f5   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x080000fd   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x080000fd   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    fputc                                    0x08000101   Thumb Code    24  gpio_out.o(.text)
    micros_10us                              0x08000119   Thumb Code     6  gpio_out.o(.text)
    Delay                                    0x0800011f   Thumb Code    16  gpio_out.o(.text)
    Delay_ms                                 0x0800012f   Thumb Code    16  gpio_out.o(.text)
    TimingDelay_Decrement                    0x0800013f   Thumb Code    18  gpio_out.o(.text)
    SysTick_Handler                          0x08000151   Thumb Code    18  gpio_out.o(.text)
    EXTI4_IRQHandler                         0x08000163   Thumb Code   120  gpio_out.o(.text)
    EXTI15_10_IRQHandler                     0x080001db   Thumb Code   182  gpio_out.o(.text)
    exit_repet_func                          0x08000291   Thumb Code    90  gpio_out.o(.text)
    exit_callback_func                       0x080002eb   Thumb Code   410  gpio_out.o(.text)
    TIM2_IRQHandler                          0x08000485   Thumb Code   234  gpio_out.o(.text)
    TIM3_IRQHandler                          0x0800056f   Thumb Code    82  gpio_out.o(.text)
    TIM4_IRQHandler                          0x080005c1   Thumb Code    92  gpio_out.o(.text)
    rs_high                                  0x0800061d   Thumb Code    14  gpio_out.o(.text)
    rs_low                                   0x0800062b   Thumb Code    14  gpio_out.o(.text)
    enable_high_low                          0x08000639   Thumb Code    24  gpio_out.o(.text)
    set_value_4bit                           0x08000651   Thumb Code   136  gpio_out.o(.text)
    set_instruction_4bit                     0x080006d9   Thumb Code    56  gpio_out.o(.text)
    set_data_4bit                            0x08000711   Thumb Code    40  gpio_out.o(.text)
    charLCD_init                             0x08000739   Thumb Code    68  gpio_out.o(.text)
    set_cursor                               0x0800077d   Thumb Code    38  gpio_out.o(.text)
    charLCD_string                           0x080007a3   Thumb Code    28  gpio_out.o(.text)
    ultrasonic                               0x080007bf   Thumb Code    34  gpio_out.o(.text)
    create_menu                              0x080007e1   Thumb Code    58  gpio_out.o(.text)
    clear_menu                               0x0800081b   Thumb Code    40  gpio_out.o(.text)
    init_menu                                0x08000843   Thumb Code   142  gpio_out.o(.text)
    clear_move_menu                          0x080008d1   Thumb Code    28  gpio_out.o(.text)
    clear_flag                               0x080008ed   Thumb Code    24  gpio_out.o(.text)
    print_menu                               0x08000905   Thumb Code  2178  gpio_out.o(.text)
    usart_pirnt_menu                         0x08001187   Thumb Code   104  gpio_out.o(.text)
    main                                     0x080011ef   Thumb Code   998  gpio_out.o(.text)
    stm32_EfiSetup                           0x08001641   Thumb Code     8  stm32_init.o(.text)
    stm32_ClockSetup                         0x08001649   Thumb Code    54  stm32_init.o(.text)
    stm32_NvicSetup                          0x0800167f   Thumb Code     2  stm32_init.o(.text)
    stm32_IwdgSetup                          0x08001681   Thumb Code    32  stm32_init.o(.text)
    stm32_SysTickSetup                       0x080016a1   Thumb Code    28  stm32_init.o(.text)
    stm32_RtcSetup                           0x080016bd   Thumb Code   174  stm32_init.o(.text)
    stm32_TimerSetup                         0x0800176b   Thumb Code     2  stm32_init.o(.text)
    stm32_GpioSetup                          0x0800176d   Thumb Code     2  stm32_init.o(.text)
    stm32_UsartSetup                         0x0800176f   Thumb Code     2  stm32_init.o(.text)
    stm32_ExtiSetup                          0x08001771   Thumb Code     2  stm32_init.o(.text)
    stm32_AfRemapSetup                       0x08001773   Thumb Code     2  stm32_init.o(.text)
    stm32_TamperSetup                        0x08001775   Thumb Code    96  stm32_init.o(.text)
    stm32_Init                               0x080017d5   Thumb Code    16  stm32_init.o(.text)
    stm32_GetPCLK1                           0x080017e5   Thumb Code     4  stm32_init.o(.text)
    Reset_Handler                            0x08001815   Thumb Code     4  stm32f10x.o(.text)
    NMI_Handler                              0x08001819   Thumb Code     2  stm32f10x.o(.text)
    HardFault_Handler                        0x0800181b   Thumb Code     2  stm32f10x.o(.text)
    MemManage_Handler                        0x0800181d   Thumb Code     2  stm32f10x.o(.text)
    BusFault_Handler                         0x0800181f   Thumb Code     2  stm32f10x.o(.text)
    UsageFault_Handler                       0x08001821   Thumb Code     2  stm32f10x.o(.text)
    SVC_Handler                              0x08001823   Thumb Code     2  stm32f10x.o(.text)
    DebugMon_Handler                         0x08001825   Thumb Code     2  stm32f10x.o(.text)
    PendSV_Handler                           0x08001827   Thumb Code     2  stm32f10x.o(.text)
    ADC_IRQHandler                           0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    CAN_RX1_IRQHandler                       0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    CAN_SCE_IRQHandler                       0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel1_IRQHandler                   0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel2_IRQHandler                   0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel3_IRQHandler                   0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel4_IRQHandler                   0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel5_IRQHandler                   0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel6_IRQHandler                   0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel7_IRQHandler                   0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    EXTI0_IRQHandler                         0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    EXTI1_IRQHandler                         0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    EXTI2_IRQHandler                         0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    EXTI3_IRQHandler                         0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    EXTI9_5_IRQHandler                       0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    FLASH_IRQHandler                         0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    I2C1_ER_IRQHandler                       0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    I2C1_EV_IRQHandler                       0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    I2C2_ER_IRQHandler                       0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    I2C2_EV_IRQHandler                       0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    PVD_IRQHandler                           0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    RCC_IRQHandler                           0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    RTCAlarm_IRQHandler                      0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    RTC_IRQHandler                           0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    SPI1_IRQHandler                          0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    SPI2_IRQHandler                          0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    TAMPER_IRQHandler                        0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    TIM1_BRK_IRQHandler                      0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    TIM1_CC_IRQHandler                       0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    TIM1_UP_IRQHandler                       0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    USART1_IRQHandler                        0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    USART2_IRQHandler                        0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    USART3_IRQHandler                        0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    USBWakeUp_IRQHandler                     0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    USB_HP_CAN_TX_IRQHandler                 0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    USB_LP_CAN_RX0_IRQHandler                0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    WWDG_IRQHandler                          0x0800182b   Thumb Code     0  stm32f10x.o(.text)
    strlen                                   0x08001831   Thumb Code    14  strlen.o(.text)
    __aeabi_dmul                             0x0800183f   Thumb Code   228  dmul.o(.text)
    __aeabi_ui2d                             0x08001923   Thumb Code    26  dfltui.o(.text)
    __aeabi_d2iz                             0x0800193d   Thumb Code    62  dfixi.o(.text)
    __aeabi_uidiv                            0x0800197b   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x0800197b   Thumb Code    44  uidiv.o(.text)
    __aeabi_llsr                             0x080019a7   Thumb Code    32  llushr.o(.text)
    _ll_ushift_r                             0x080019a7   Thumb Code     0  llushr.o(.text)
    __I$use$fp                               0x080019c7   Thumb Code     0  iusefp.o(.text)
    _double_round                            0x080019c7   Thumb Code    30  depilogue.o(.text)
    _double_epilogue                         0x080019e5   Thumb Code   156  depilogue.o(.text)
    __scatterload                            0x08001a81   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x08001a81   Thumb Code     0  init.o(.text)
    __aeabi_llsl                             0x08001aa5   Thumb Code    30  llshl.o(.text)
    _ll_shift_l                              0x08001aa5   Thumb Code     0  llshl.o(.text)
    __0printf$3                              0x08001ac5   Thumb Code    22  printf3.o(i.__0printf$3)
    __1printf$3                              0x08001ac5   Thumb Code     0  printf3.o(i.__0printf$3)
    __2printf                                0x08001ac5   Thumb Code     0  printf3.o(i.__0printf$3)
    __0sprintf$3                             0x08001ae5   Thumb Code    34  printf3.o(i.__0sprintf$3)
    __1sprintf$3                             0x08001ae5   Thumb Code     0  printf3.o(i.__0sprintf$3)
    __2sprintf                               0x08001ae5   Thumb Code     0  printf3.o(i.__0sprintf$3)
    __scatterload_copy                       0x08001b0d   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x08001b1b   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x08001b1d   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    malloc                                   0x08001cf1   Thumb Code    92  malloc.o(i.malloc)
    Region$$Table$$Base                      0x08001de0   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08001e00   Number         0  anon$$obj.o(Region$$Table)
    TimingDelay                              0x20000000   Data           4  gpio_out.o(.data)
    sys_count                                0x20000004   Data           4  gpio_out.o(.data)
    i                                        0x20000008   Data           4  gpio_out.o(.data)
    j                                        0x2000000c   Data           4  gpio_out.o(.data)
    main_menu_text                           0x20000010   Data          20  gpio_out.o(.data)
    rem_menu_text                            0x20000024   Data           8  gpio_out.o(.data)
    ultra_menu_text                          0x2000002c   Data           8  gpio_out.o(.data)
    servo_menu_text                          0x20000034   Data           8  gpio_out.o(.data)
    buzzer_menu_text                         0x2000003c   Data           8  gpio_out.o(.data)
    led_menu_text                            0x20000044   Data          12  gpio_out.o(.data)
    curr_millis                              0x20000050   Data           4  gpio_out.o(.data)
    prev_millis                              0x20000054   Data           4  gpio_out.o(.data)
    rem_count1                               0x20000058   Data           4  gpio_out.o(.data)
    falling_edge_index                       0x2000005c   Data           4  gpio_out.o(.data)
    value_hex                                0x20000060   Data           1  gpio_out.o(.data)
    value_num                                0x20000061   Data          15  gpio_out.o(.data)
    remocon_num                              0x20000070   Data           1  gpio_out.o(.data)
    rep_remocon_flag                         0x20000071   Data           1  gpio_out.o(.data)
    rem_prev_millis                          0x20000074   Data           4  gpio_out.o(.data)
    exti_callback_flag                       0x20000078   Data           1  gpio_out.o(.data)
    rem_print_toggle                         0x2000007c   Data           4  gpio_out.o(.data)
    ultrasonic_toggle                        0x20000080   Data           4  gpio_out.o(.data)
    ultrasonic_distance                      0x20000084   Data           4  gpio_out.o(.data)
    ultrasonic_difftime                      0x20000088   Data           4  gpio_out.o(.data)
    ultrasonic_starttime                     0x2000008c   Data           4  gpio_out.o(.data)
    ultrasonic_endtime                       0x20000090   Data           4  gpio_out.o(.data)
    exti_ultrasonic_flag                     0x20000094   Data           1  gpio_out.o(.data)
    servo_duty                               0x20000098   Data           4  gpio_out.o(.data)
    servo_en_toggle                          0x2000009c   Data           4  gpio_out.o(.data)
    CharLcd_idx                              0x200000a0   Data           4  gpio_out.o(.data)
    curr_pos                                 0x200000a4   Data           4  gpio_out.o(.data)
    curr_print_pos                           0x200000a8   Data           4  gpio_out.o(.data)
    curr_up_down                             0x200000ac   Data           4  gpio_out.o(.data)
    up_flag                                  0x200000b0   Data           4  gpio_out.o(.data)
    down_flag                                0x200000b4   Data           4  gpio_out.o(.data)
    right_flag                               0x200000b8   Data           4  gpio_out.o(.data)
    left_flag                                0x200000bc   Data           4  gpio_out.o(.data)
    enter_flag                               0x200000c0   Data           4  gpio_out.o(.data)
    print_toggle                             0x200000c4   Data           4  gpio_out.o(.data)
    cursor_toggle                            0x200000c8   Data           4  gpio_out.o(.data)
    led_duty                                 0x200000cc   Data           4  gpio_out.o(.data)
    prev_led_millis                          0x200000d0   Data           4  gpio_out.o(.data)
    led_en_toggle                            0x200000d4   Data           4  gpio_out.o(.data)
    note_cycle                               0x200000d8   Data           4  gpio_out.o(.data)
    note_duty                                0x200000dc   Data           4  gpio_out.o(.data)
    note_toggle                              0x200000e0   Data           4  gpio_out.o(.data)
    __stdout                                 0x200000e4   Data           4  stdout.o(.data)
    __microlib_freelist                      0x200000e8   Data           4  mvars.o(.data)
    __microlib_freelist_initialised          0x200000ec   Data           4  mvars.o(.data)
    error_parity_garbage                     0x200000f0   Data         512  gpio_out.o(.bss)
    falling_edge_timing                      0x200002f0   Data         160  gpio_out.o(.bss)
    diff_falling_edge_timing                 0x20000390   Data         132  gpio_out.o(.bss)
    value_bit                                0x20000414   Data         128  gpio_out.o(.bss)
    charLcd_arr                              0x20000494   Data          24  gpio_out.o(.bss)
    __heap_base                              0x200004b0   Data           0  stm32f10x.o(HEAP)
    __heap_limit                             0x200004b0   Data           0  stm32f10x.o(HEAP)
    __initial_sp                             0x200006b0   Data           0  stm32f10x.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000ed

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00001ef0, Max: 0x00020000, ABSOLUTE)

    Execution Region ER_IROM1 (Base: 0x08000000, Size: 0x00001e00, Max: 0x00020000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x000000ec   Data   RO          137    RESET               stm32f10x.o
    0x080000ec   0x00000000   Code   RO          143  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x080000ec   0x00000004   Code   RO          443    .ARM.Collect$$$$00000001  mc_w.l(entry2.o)
    0x080000f0   0x00000004   Code   RO          446    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x080000f4   0x00000000   Code   RO          448    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x080000f4   0x00000000   Code   RO          450    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x080000f4   0x00000008   Code   RO          451    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x080000fc   0x00000000   Code   RO          453    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x080000fc   0x00000000   Code   RO          455    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x080000fc   0x00000004   Code   RO          444    .ARM.Collect$$$$00002712  mc_w.l(entry2.o)
    0x08000100   0x00001540   Code   RO            1    .text               gpio_out.o
    0x08001640   0x000001d4   Code   RO          120    .text               stm32_init.o
    0x08001814   0x0000001c   Code   RO          138    .text               stm32f10x.o
    0x08001830   0x0000000e   Code   RO          146    .text               mc_w.l(strlen.o)
    0x0800183e   0x000000e4   Code   RO          437    .text               mf_w.l(dmul.o)
    0x08001922   0x0000001a   Code   RO          439    .text               mf_w.l(dfltui.o)
    0x0800193c   0x0000003e   Code   RO          441    .text               mf_w.l(dfixi.o)
    0x0800197a   0x0000002c   Code   RO          458    .text               mc_w.l(uidiv.o)
    0x080019a6   0x00000020   Code   RO          462    .text               mc_w.l(llushr.o)
    0x080019c6   0x00000000   Code   RO          470    .text               mc_w.l(iusefp.o)
    0x080019c6   0x000000ba   Code   RO          471    .text               mf_w.l(depilogue.o)
    0x08001a80   0x00000024   Code   RO          481    .text               mc_w.l(init.o)
    0x08001aa4   0x0000001e   Code   RO          483    .text               mc_w.l(llshl.o)
    0x08001ac2   0x00000002   PAD
    0x08001ac4   0x00000020   Code   RO          237    i.__0printf$3       mc_w.l(printf3.o)
    0x08001ae4   0x00000028   Code   RO          239    i.__0sprintf$3      mc_w.l(printf3.o)
    0x08001b0c   0x0000000e   Code   RO          489    i.__scatterload_copy  mc_w.l(handlers.o)
    0x08001b1a   0x00000002   Code   RO          490    i.__scatterload_null  mc_w.l(handlers.o)
    0x08001b1c   0x0000000e   Code   RO          491    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x08001b2a   0x00000002   PAD
    0x08001b2c   0x000001b8   Code   RO          244    i._printf_core      mc_w.l(printf3.o)
    0x08001ce4   0x0000000a   Code   RO          246    i._sputc            mc_w.l(printf3.o)
    0x08001cee   0x00000002   PAD
    0x08001cf0   0x0000006c   Code   RO          410    i.malloc            mc_w.l(malloc.o)
    0x08001d5c   0x00000082   Data   RO            3    .conststring        gpio_out.o
    0x08001dde   0x00000002   PAD
    0x08001de0   0x00000020   Data   RO          487    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Base: 0x20000000, Size: 0x000006b0, Max: 0x00005000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x000000e4   Data   RW            4    .data               gpio_out.o
    0x200000e4   0x00000004   Data   RW          457    .data               mc_w.l(stdout.o)
    0x200000e8   0x00000004   Data   RW          468    .data               mc_w.l(mvars.o)
    0x200000ec   0x00000004   Data   RW          469    .data               mc_w.l(mvars.o)
    0x200000f0   0x000003bc   Zero   RW            2    .bss                gpio_out.o
    0x200004ac   0x00000004   PAD
    0x200004b0   0x00000000   Zero   RW          136    HEAP                stm32f10x.o
    0x200004b0   0x00000200   Zero   RW          135    STACK               stm32f10x.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      5440        602        130        228        956      13497   gpio_out.o
       468         44          0          0          0       2081   stm32_init.o
        28          4        236          0        512        792   stm32f10x.o

    ----------------------------------------------------------------------
      5936        650        400        228       1472      16370   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         0          0          2          0          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
        30          0          0          0          0         68   llshl.o
        32          0          0          0          0         68   llushr.o
       108         16          0          0          0         84   malloc.o
         0          0          0          8          0          0   mvars.o
       522         20          0          0          0        336   printf3.o
         0          0          0          4          0          0   stdout.o
        14          0          0          0          0         68   strlen.o
        44          0          0          0          0         80   uidiv.o
       186          0          0          0          0        176   depilogue.o
        62          0          0          0          0         80   dfixi.o
        26          0          0          0          0         76   dfltui.o
       228          0          0          0          0         96   dmul.o

    ----------------------------------------------------------------------
      1344         52          0         12          0       1200   Library Totals
         6          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       836         52          0         12          0        772   mc_w.l
       502          0          0          0          0        428   mf_w.l

    ----------------------------------------------------------------------
      1344         52          0         12          0       1200   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      7280        702        400        240       1472      16994   Grand Totals
      7280        702        400        240       1472      16994   ELF Image Totals
      7280        702        400        240          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 7680 (   7.50kB)
    Total RW  Size (RW Data + ZI Data)              1712 (   1.67kB)
    Total ROM Size (Code + RO Data + RW Data)       7920 (   7.73kB)

==============================================================================

